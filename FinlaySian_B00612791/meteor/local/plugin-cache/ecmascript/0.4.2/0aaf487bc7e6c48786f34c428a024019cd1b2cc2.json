{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/lib/app.js","filenameRelative":"/client/lib/app.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/lib/app.js.map","sourceFileName":"/client/lib/app.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"app"},"ignored":false,"code":"// client side js\n// Mongo collections\nAvatar = new Mongo.Collection(\"avatar\");\nLevels = new Mongo.Collection(\"levels\");\nLeaderboard = new Mongo.Collection(\"leaderboard\", {\n  //create join to avatar collection\n  transform: function () {\n    function transform(doc) {\n      doc.avatarObj = Avatar.find({\n        owner: doc.owner\n      });\n      return doc;\n    }\n\n    return transform;\n  }()\n});\n\n// initialize dropdown menu\nTemplate.dropdown_nav.onRendered(function () {\n  $('.dropdown-button').dropdown({\n    belowOrigin: true\n  });\n});\n// get user's avatar for handlebars\nTemplate.user_avatar.helpers({\n  avatar: function () {\n    function avatar() {\n      return Avatar.find({\n        owner: Meteor.userId()\n      });\n    }\n\n    return avatar;\n  }()\n});\n\n// get collections for client side\nif (Meteor.isClient) {\n  Meteor.subscribe(\"avatar_levels\");\n}","ast":null,"map":{"version":3,"sources":["/client/lib/app.js"],"names":[],"mappings":";;AAEA,SAAS,IAAI,MAAM,UAAN,CAAiB,QAArB,CAAT;AACA,SAAS,IAAI,MAAM,UAAN,CAAiB,QAArB,CAAT;AACA,cAAc,IAAI,MAAM,UAAN,CAAiB,aAArB,EAAqC;;AAE/C;AAAW,uBAAS,GAAT,EAAc;AACvB,UAAI,SAAJ,GAAgB,OAAO,IAAP,CAAY;AAC1B,eAAO,IAAI,KAAJ;OADO,CAAhB,CADuB;AAIvB,aAAO,GAAP,CAJuB;KAAd;;;KAAX;CAFU,CAAd;;;AAWE,SAAS,YAAT,CAAsB,UAAtB,CAAkC,YAAU;AAC1C,IAAE,kBAAF,EAAsB,QAAtB,CAA+B;AAC7B,iBAAa,IAAb;GADF,EAD0C;CAAV,CAAlC;;AAMA,SAAS,WAAT,CAAqB,OAArB,CAA6B;AAC3B;AAAQ,sBAAY;AAClB,aAAO,OAAO,IAAP,CAAY;AACjB,eAAO,OAAO,MAAP,EAAP;OADK,CAAP,CADkB;KAAZ;;;KAAR;CADF;;;AASF,IAAI,OAAO,QAAP,EAAgB;AAClB,SAAO,SAAP,CAAiB,eAAjB,EADkB;CAApB","file":"/client/lib/app.js.map","sourcesContent":["// client side js \n// Mongo collections\nAvatar = new Mongo.Collection(\"avatar\");\nLevels = new Mongo.Collection(\"levels\");\nLeaderboard = new Mongo.Collection(\"leaderboard\",  {\n   //create join to avatar collection\n    transform: function(doc) {\n      doc.avatarObj = Avatar.find({\n        owner: doc.owner\n      });\n      return doc;\n    }\n  });\n\n  // initialize dropdown menu\n  Template.dropdown_nav.onRendered( function(){\n    $('.dropdown-button').dropdown({\n      belowOrigin: true\n    });\n  });\n  // get user's avatar for handlebars\n  Template.user_avatar.helpers({\n    avatar: function () {\n      return Avatar.find({\n        owner: Meteor.userId()\n      });\n    }\n  });\n\n// get collections for client side\nif (Meteor.isClient){\n  Meteor.subscribe(\"avatar_levels\");\n}"]},"hash":"0aaf487bc7e6c48786f34c428a024019cd1b2cc2"}
