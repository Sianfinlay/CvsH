{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/avatar.js","filenameRelative":"/server/avatar.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/avatar.js.map","sourceFileName":"/server/avatar.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"avatar"},"ignored":false,"code":"Avatar = new Mongo.Collection(\"avatar\");\nMeteor.methods({\n\taddAvatar: function () {\n\t\tfunction addAvatar(userId) {\n\t\t\t//Make sure the user is sign up before creating an avatar\n\n\t\t\t//var username = Meteor.user().username || Meteor.user().profile.name\n\t\t\tAvatar.insert({\n\t\t\t\tskin: 'skin_1',\n\t\t\t\thair: 'hair_1_brown',\n\t\t\t\toutfit: 'dress_1',\n\t\t\t\towner: user._id\n\t\t\t});\n\t\t}\n\n\t\treturn addAvatar;\n\t}(),\n\tupdateAvatar: function () {\n\t\tfunction updateAvatar(newSkin, newHair, newOutfit) {\n\t\t\tvar avatar = Avatar.findOne({\n\t\t\t\towner: this.userId\n\t\t\t});\n\n\t\t\tvar username = Meteor.user().username || Meteor.user().profile.name;\n\t\t\tAvatar.update({\n\t\t\t\towner: this.userId\n\t\t\t}, {\n\t\t\t\t$set: {\n\t\t\t\t\tskin: newSkin,\n\t\t\t\t\thair: newHair,\n\t\t\t\t\toutfit: newOutfit\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn updateAvatar;\n\t}(),\n\tdeleteAvatar: function () {\n\t\tfunction deleteAvatar(avatarId) {\n\t\t\tvar avatar = Avatar.findOne(avatarId);\n\t\t\tif (avatar.owner !== Meteor.userId()) {\n\t\t\t\tthrow new Meteor.Error(\"not-authorized\");\n\t\t\t}\n\n\t\t\t//Avatar.remove(avatarId) {\n\n\t\t\t//}\n\t\t}\n\n\t\treturn deleteAvatar;\n\t}()\n});","ast":null,"map":{"version":3,"sources":["/server/avatar.js"],"names":[],"mappings":"AAAA,SAAS,IAAI,MAAM,UAAN,CAAiB,QAArB,CAAT;AACC,OAAO,OAAP,CAAe;AACd;AAAW,qBAAU,MAAV,EAAkB;;;;AAK5B,UAAO,MAAP,CAAc;AACb,UAAM,QAAN;AACA,UAAM,cAAN;AACA,YAAQ,SAAR;AACA,WAAO,KAAK,GAAL;IAJR,EAL4B;GAAlB;;;IAAX;AAYA;AAAc,wBAAU,OAAV,EAAmB,OAAnB,EAA4B,SAA5B,EAAuC;AACpD,OAAI,SAAS,OAAO,OAAP,CAAe;AAC3B,WAAO,KAAK,MAAL;IADK,CAAT,CADgD;;AAKpD,OAAI,WAAW,OAAO,IAAP,GAAc,QAAd,IAA0B,OAAO,IAAP,GAAc,OAAd,CAAsB,IAAtB,CALW;AAMpD,UAAO,MAAP,CAAc;AACb,WAAO,KAAK,MAAL;IADR,EAEG;AACF,UAAM;AACL,WAAM,OAAN;AACA,WAAM,OAAN;AACA,aAAQ,SAAR;KAHD;IAHD,EANoD;GAAvC;;;IAAd;AAgBA;AAAc,wBAAU,QAAV,EAAoB;AACjC,OAAI,SAAS,OAAO,OAAP,CAAe,QAAf,CAAT,CAD6B;AAEjC,OAAI,OAAO,KAAP,KAAiB,OAAO,MAAP,EAAjB,EAAkC;AACrC,UAAM,IAAI,OAAO,KAAP,CAAa,gBAAjB,CAAN,CADqC;IAAtC;;;;;AAFiC,GAApB;;;IAAd;CA7BD","file":"/server/avatar.js.map","sourcesContent":["Avatar = new Mongo.Collection(\"avatar\");\n\tMeteor.methods({\n\t\taddAvatar: function (userId) {\n\t\t\t//Make sure the user is sign up before creating an avatar\n\t\t\t\n\n\t\t\t//var username = Meteor.user().username || Meteor.user().profile.name\n\t\t\tAvatar.insert({\n\t\t\t\tskin: 'skin_1',\n\t\t\t\thair: 'hair_1_brown',\n\t\t\t\toutfit: 'dress_1',\n\t\t\t\towner: user._id\n\t\t\t});\n\t\t},\n\t\tupdateAvatar: function (newSkin, newHair, newOutfit) {\n\t\t\tvar avatar = Avatar.findOne({\n\t\t\t\towner: this.userId\n\t\t\t});\n\t\t\t\n\t\t\tvar username = Meteor.user().username || Meteor.user().profile.name\n\t\t\tAvatar.update({\n\t\t\t\towner: this.userId\n\t\t\t}, { \n\t\t\t\t$set: {\n\t\t\t\t\tskin: newSkin,\n\t\t\t\t\thair: newHair,\n\t\t\t\t\toutfit: newOutfit\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tdeleteAvatar: function (avatarId) {\n\t\t\tvar avatar = Avatar.findOne(avatarId);\n\t\t\tif (avatar.owner !== Meteor.userId()) {\n\t\t\t\tthrow new Meteor.Error(\"not-authorized\");\n\t\t\t}\n\n\t\t\t//Avatar.remove(avatarId) {\n\n\t\t\t//}\n\t\t}\n\t});\n\n\n\n"]},"hash":"73b8dd927baaafed124e1574b1ba631d15ce6579"}
