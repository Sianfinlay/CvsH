[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"server\":{\"accounts.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/accounts.js                                                //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n// facebook login                                                    //\nServiceConfiguration.configurations.remove({ service: \"facebook\" });\nServiceConfiguration.configurations.remove({ service: \"twitter\" });  // 3\n                                                                     //\nServiceConfiguration.configurations.insert({                         // 6\n  service: \"facebook\",                                               // 7\n  appId: \"1708230562789289\",                                         // 8\n  secret: \"1983cb0435f0d43977ed8092a89b698d\"                         // 9\n});                                                                  //\n                                                                     //\n// twitter doesn't work                                              //\n/*Accounts.loginServiceConfiguration.remove({                        //\n  service: \"twitter\"                                                 //\n});                                                                  //\nAccounts.loginServiceConfiguration.insert({                          //\n  service: \"twitter\",                                                //\n  consumerKey: \"yourConsumerKey\",                                    //\n  secret: \"yourSecret\"                                               //\n});*/                                                                //\n///////////////////////////////////////////////////////////////////////\n\n},\"avatar.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/avatar.js                                                  //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nAvatar = new Mongo.Collection(\"avatar\");                             // 1\nMeteor.methods({                                                     // 2\n\taddAvatar: function () {                                            // 3\n\t\tfunction addAvatar(userId) {                                       // 3\n\t\t\tAvatar.insert({                                                   // 4\n\t\t\t\tskin: 'skin_1',                                                  // 5\n\t\t\t\thair: 'hair_1_brown',                                            // 6\n\t\t\t\toutfit: 'dress_1',                                               // 7\n\t\t\t\towner: user._id                                                  // 8\n\t\t\t});                                                               //\n\t\t}                                                                  //\n                                                                     //\n\t\treturn addAvatar;                                                  //\n\t}(),                                                                //\n\tupdateAvatar: function () {                                         // 11\n\t\tfunction updateAvatar(newSkin, newHair, newOutfit) {               // 11\n\t\t\tvar avatar = Avatar.findOne({                                     // 12\n\t\t\t\towner: this.userId                                               // 13\n\t\t\t});                                                               //\n                                                                     //\n\t\t\tAvatar.update({                                                   // 16\n\t\t\t\towner: this.userId                                               // 17\n\t\t\t}, {                                                              //\n\t\t\t\t$set: {                                                          // 19\n\t\t\t\t\tskin: newSkin,                                                  // 20\n\t\t\t\t\thair: newHair,                                                  // 21\n\t\t\t\t\toutfit: newOutfit                                               // 22\n\t\t\t\t}                                                                //\n\t\t\t});                                                               //\n\t\t}                                                                  //\n                                                                     //\n\t\treturn updateAvatar;                                               //\n\t}()                                                                 //\n});                                                                  //\n///////////////////////////////////////////////////////////////////////\n\n},\"levels.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/levels.js                                                  //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nLevels = new Mongo.Collection(\"levels\");                             // 1\nLeaderboard = new Mongo.Collection(\"leaderboard\");                   // 2\nMeteor.methods({                                                     // 3\n\taddLevel: function () {                                             // 4\n\t\tfunction addLevel(levelNo, maxScore) {                             // 4\n\t\t\t// example of level insert                                        //\n\t\t\tLevels.insert({                                                   // 6\n\t\t\t\tlevel: levelNo,                                                  // 7\n\t\t\t\tscore: 0,                                                        // 8\n\t\t\t\tmaxScore: maxScore,                                              // 9\n\t\t\t\tcompleted: false,                                                // 10\n\t\t\t\towner: user._id                                                  // 11\n\t\t\t});                                                               //\n\t\t}                                                                  //\n                                                                     //\n\t\treturn addLevel;                                                   //\n\t}(),                                                                //\n\tupdateLevel: function () {                                          // 14\n\t\tfunction updateLevel(levelNo, score) {                             // 14\n\t\t\tvar levels = Levels.findOne({                                     // 15\n\t\t\t\towner: this.userId                                               // 16\n\t\t\t});                                                               //\n                                                                     //\n\t\t\tLevels.update({                                                   // 19\n\t\t\t\tlevel: levelNo,                                                  // 20\n\t\t\t\towner: this.userId                                               // 21\n\t\t\t}, {                                                              //\n\t\t\t\t$set: {                                                          // 23\n\t\t\t\t\tscore: score,                                                   // 24\n\t\t\t\t\tcompleted: true                                                 // 25\n\t\t\t\t}                                                                //\n\t\t\t});                                                               //\n\t\t}                                                                  //\n                                                                     //\n\t\treturn updateLevel;                                                //\n\t}(),                                                                //\n\tupdateStars: function () {                                          // 29\n\t\tfunction updateStars(newStars) {                                   // 29\n\t\t\tvar leaderboard = Leaderboard.findOne({                           // 30\n\t\t\t\towner: this.userId                                               // 31\n\t\t\t});                                                               //\n                                                                     //\n\t\t\tLeaderboard.update({                                              // 34\n\t\t\t\towner: this.userId                                               // 35\n\t\t\t}, {                                                              //\n\t\t\t\t$set: {                                                          // 37\n\t\t\t\t\tstars: newStars                                                 // 38\n\t\t\t\t}                                                                //\n\t\t\t});                                                               //\n\t\t}                                                                  //\n                                                                     //\n\t\treturn updateStars;                                                //\n\t}()                                                                 //\n});                                                                  //\n///////////////////////////////////////////////////////////////////////\n\n},\"newUser.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/newUser.js                                                 //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n// on new user                                                       //\nif (Meteor.isServer) {                                               // 2\n\tAccounts.onCreateUser(function (options, user) {                    // 3\n\t\tAvatar.insert({                                                    // 4\n\t\t\tskin: 'skin_1',                                                   // 5\n\t\t\thair: 'hair_1_brown',                                             // 6\n\t\t\toutfit: 'dress_1',                                                // 7\n\t\t\towner: user._id                                                   // 8\n\t\t});                                                                //\n                                                                     //\n\t\t// level 1 insert                                                  //\n\t\tLevels.insert({                                                    // 3\n\t\t\tlevel: 1,                                                         // 14\n\t\t\tscore: 0,                                                         // 15\n\t\t\tmaxScore: 2,                                                      // 16\n\t\t\tcompleted: false,                                                 // 17\n\t\t\towner: user._id                                                   // 18\n\t\t});                                                                //\n\t\t// level 2 insert                                                  //\n\t\tLevels.insert({                                                    // 3\n\t\t\tlevel: 2,                                                         // 22\n\t\t\tscore: 0,                                                         // 23\n\t\t\tmaxScore: 4,                                                      // 24\n\t\t\tcompleted: false,                                                 // 25\n\t\t\towner: user._id                                                   // 26\n\t\t});                                                                //\n\t\t// level 3 insert                                                  //\n\t\tLevels.insert({                                                    // 3\n\t\t\tlevel: 3,                                                         // 30\n\t\t\tscore: 0,                                                         // 31\n\t\t\tmaxScore: 6,                                                      // 32\n\t\t\tcompleted: false,                                                 // 33\n\t\t\towner: user._id                                                   // 34\n\t\t});                                                                //\n\t\t// level 4 insert                                                  //\n\t\tLevels.insert({                                                    // 3\n\t\t\tlevel: 4,                                                         // 38\n\t\t\tscore: 0,                                                         // 39\n\t\t\tmaxScore: 6,                                                      // 40\n\t\t\tcompleted: false,                                                 // 41\n\t\t\towner: user._id                                                   // 42\n\t\t});                                                                //\n\t\t// level 5 insert                                                  //\n\t\tLevels.insert({                                                    // 3\n\t\t\tlevel: 5,                                                         // 46\n\t\t\tscore: 0,                                                         // 47\n\t\t\tmaxScore: 2,                                                      // 48\n\t\t\tcompleted: false,                                                 // 49\n\t\t\towner: user._id                                                   // 50\n\t\t});                                                                //\n                                                                     //\n\t\tLeaderboard.insert({                                               // 53\n\t\t\towner: user._id,                                                  // 54\n\t\t\tstars: 0                                                          // 55\n\t\t});                                                                //\n                                                                     //\n\t\tif (options.profile) user.profile = options.profile;               // 58\n\t\tconsole.log(user);                                                 // 60\n\t\treturn user;                                                       // 61\n                                                                     //\n\t\tif (options.profile) user.profile = options.profile;               // 63\n\t\tconsole.log(user);                                                 // 65\n\t\treturn user;                                                       // 66\n\t});                                                                 //\n}                                                                    //\n///////////////////////////////////////////////////////////////////////\n\n},\"publish.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/publish.js                                                 //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n// publish collections                                               //\n                                                                     //\nMeteor.publish(\"avatar_levels\", function () {                        // 3\n\treturn [Avatar.find(), Levels.find(), Leaderboard.find()];          // 4\n});                                                                  //\n///////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/accounts.js\");\nrequire(\"./server/avatar.js\");\nrequire(\"./server/levels.js\");\nrequire(\"./server/newUser.js\");\nrequire(\"./server/publish.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/server/accounts.js","/server/avatar.js","/server/levels.js","/server/newUser.js","/server/publish.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["// facebook login\nServiceConfiguration.configurations.remove({service: \"facebook\"});\nServiceConfiguration.configurations.remove({service: \"twitter\"});\n\n\nServiceConfiguration.configurations.insert({\n  service: \"facebook\",\n  appId: \"1708230562789289\",\n  secret: \"1983cb0435f0d43977ed8092a89b698d\"\n});\n\n// twitter doesn't work\n/*Accounts.loginServiceConfiguration.remove({\n  service: \"twitter\"\n});\nAccounts.loginServiceConfiguration.insert({\n  service: \"twitter\",\n  consumerKey: \"yourConsumerKey\",\n  secret: \"yourSecret\"\n});*/\n","Avatar = new Mongo.Collection(\"avatar\");\n\tMeteor.methods({\n\t\taddAvatar: function (userId) {\n\t\t\tAvatar.insert({\n\t\t\t\tskin: 'skin_1',\n\t\t\t\thair: 'hair_1_brown',\n\t\t\t\toutfit: 'dress_1',\n\t\t\t\towner: user._id\n\t\t\t});\n\t\t},\n\t\tupdateAvatar: function (newSkin, newHair, newOutfit) {\n\t\t\tvar avatar = Avatar.findOne({\n\t\t\t\towner: this.userId\n\t\t\t});\n\t\t\t\n\t\t\tAvatar.update({\n\t\t\t\towner: this.userId\n\t\t\t}, { \n\t\t\t\t$set: {\n\t\t\t\t\tskin: newSkin,\n\t\t\t\t\thair: newHair,\n\t\t\t\t\toutfit: newOutfit\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\n\n","Levels = new Mongo.Collection(\"levels\");\nLeaderboard = new Mongo.Collection(\"leaderboard\");\n\tMeteor.methods({\n\t\taddLevel: function (levelNo, maxScore) {\n\t\t\t// example of level insert\n\t\t\tLevels.insert({\n\t\t\t\tlevel: levelNo,\n\t\t\t\tscore: 0,\n\t\t\t\tmaxScore: maxScore,\n\t\t\t\tcompleted: false,\n\t\t\t\towner: user._id\n\t\t\t});\n\t\t},\n\t\tupdateLevel: function (levelNo, score) {\n\t\t\tvar levels = Levels.findOne({\n\t\t\t\towner: this.userId\n\t\t\t});\n\t\t\t\n\t\t\tLevels.update({\n\t\t\t\tlevel: levelNo,\n\t\t\t\towner: this.userId\n\t\t\t}, { \n\t\t\t\t$set: {\n\t\t\t\t\tscore: score,\n\t\t\t\t\tcompleted: true\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tupdateStars: function (newStars) {\n\t\t\tvar leaderboard = Leaderboard.findOne({\n\t\t\t\towner: this.userId\n\t\t\t});\n\n\t\t\tLeaderboard.update({\n\t\t\t\towner: this.userId\n\t\t\t}, {\n\t\t\t\t$set: {\n\t\t\t\t\tstars: newStars\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});","// on new user\nif (Meteor.isServer) {\n\tAccounts.onCreateUser(function(options, user) {\n\t  \tAvatar.insert({\n\t\t\tskin: 'skin_1',\n\t\t\thair: 'hair_1_brown',\n\t\t\toutfit: 'dress_1',\n\t\t\towner: user._id\n\t\t});\n\n\n\t\t// level 1 insert\n\t    Levels.insert({\n\t    \tlevel: 1,\n\t\t\tscore: 0,\n\t\t\tmaxScore: 2,\n\t\t\tcompleted: false,\n\t\t\towner: user._id\n\t\t});\n\t\t// level 2 insert\n\t    Levels.insert({\n\t    \tlevel: 2,\n\t\t\tscore: 0,\n\t\t\tmaxScore: 4,\n\t\t\tcompleted: false,\n\t\t\towner: user._id\n\t\t});\n\t\t// level 3 insert\n\t    Levels.insert({\n\t    \tlevel: 3,\n\t\t\tscore: 0,\n\t\t\tmaxScore: 6,\n\t\t\tcompleted: false,\n\t\t\towner: user._id\n\t\t});\n\t\t// level 4 insert\n\t    Levels.insert({\n\t    \tlevel: 4,\n\t\t\tscore: 0,\n\t\t\tmaxScore: 6,\n\t\t\tcompleted: false,\n\t\t\towner: user._id\n\t\t});\n\t\t// level 5 insert\n\t    Levels.insert({\n\t    \tlevel: 5,\n\t\t\tscore: 0,\n\t\t\tmaxScore: 2,\n\t\t\tcompleted: false,\n\t\t\towner: user._id\n\t\t});\n\n\t\tLeaderboard.insert({\n\t\t\towner: user._id,\n\t\t\tstars: 0\n\t\t});\n\n\t  \tif (options.profile)\n\t\t    user.profile = options.profile;\n\t\t\tconsole.log(user)\n\t \treturn user;\n\n\t    if (options.profile)\n\t    \tuser.profile = options.profile;\n\t\t\tconsole.log(user)\n\t  \treturn user;\n\n\t});\t\t\n\t\n\t\n}","// publish collections\n\t\n\tMeteor.publish(\"avatar_levels\", function () {\n\t\treturn [\n\t\t    Avatar.find(),\n\t\t    Levels.find(),\n\t\t    Leaderboard.find()\n\t\t  ];\n\t});\n"]}}]